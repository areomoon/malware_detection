import sys
import os
from math import log
import numpy as np
import argparse
import scipy as sp
from PIL import Image
from time import time

def timing(f):
    def wrapper(*args, **kwargs):
        start = time()
        result = f(*args, **kwargs)
        end = time()
        print ('Elapsed time: {} sec'.format(end-start))
        return result
    return wrapper

@timing
def saveimg(array, name, mode, key):
    print(name)
    print(array.shape)

    if array.shape[1] != 16:
        assert (False)
    b = int((array.shape[0] * 16) ** (0.5))
    b = 2 ** (int(log(b) / log(2)) + 1)
    a = int(array.shape[0] * 16 / b)
    print(str(a)+' '+str(b)+' '+str(array.shape))

    array = array[:int(a*b/16), :]

    array = np.reshape(array, (a, b))
    # print array.shape
    # array = np.uint8(array)
    # print array
    # array.resize((128,128))

    im = Image.fromarray(np.uint8(array))
    im.save(mode+'_image/' + key + '.jpg', "JPEG")

parser = argparse.ArgumentParser(description='image trans')
parser.add_argument('--mode', default='train',help='Choose train or test mode')
args = parser.parse_args()

mode =args.mode
files = os.listdir('../' + mode)

if not os.path.exists(mode+'_image'):
    os.mkdir(mode+'_image')

c = 0
for cc, x in enumerate(files):
    if '.csv' in x:  # skip .asm file
        continue
    print(cc)
    key = x.split('.')[0]

    f = open('../' + mode + '/' + x)
    array = []
    c += 1
    for line in f:
        xx = line.split()
        if len(xx) != 17:
            continue
        array.append([int(i, 16) if i != '??' else 0 for i in xx[1:]])
    saveimg(np.array(array), x, mode, key)
    del array
    f.close()

print(c)